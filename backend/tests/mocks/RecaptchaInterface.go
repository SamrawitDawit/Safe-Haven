// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RecaptchaInterface is an autogenerated mock type for the RecaptchaInterface type
type RecaptchaInterface struct {
	mock.Mock
}

// CreateAssessment provides a mock function with given fields: token
func (_m *RecaptchaInterface) CreateAssessment(token string) (float32, error) {
	ret := _m.Called(token)

	if len(ret) == 0 {
		panic("no return value specified for CreateAssessment")
	}

	var r0 float32
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (float32, error)); ok {
		return rf(token)
	}
	if rf, ok := ret.Get(0).(func(string) float32); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(float32)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRecaptchaInterface creates a new instance of RecaptchaInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRecaptchaInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *RecaptchaInterface {
	mock := &RecaptchaInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
